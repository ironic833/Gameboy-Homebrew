                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.2 #13350 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -msm83
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _animateSprite
                                     13 	.globl _canPlayerMove
                                     14 	.globl _performanceDelay
                                     15 	.globl _printf
                                     16 	.globl _set_sprite_data
                                     17 	.globl _set_bkg_tiles
                                     18 	.globl _set_bkg_data
                                     19 	.globl _wait_vbl_done
                                     20 	.globl _joypad
                                     21 	.globl _PlacyHolder
                                     22 	.globl _BackgropundTiles
                                     23 	.globl _BackgroundTest
                                     24 	.globl _gameRunning
                                     25 	.globl _haskey
                                     26 	.globl _debug
                                     27 	.globl _playerLocation
                                     28 	.globl _blankMap
                                     29 ;--------------------------------------------------------
                                     30 ; special function registers
                                     31 ;--------------------------------------------------------
                                     32 ;--------------------------------------------------------
                                     33 ; ram data
                                     34 ;--------------------------------------------------------
                                     35 	.area _DATA
      000000                         36 _playerLocation::
      000000                         37 	.ds 2
      000002                         38 _debug::
      000002                         39 	.ds 1
      000003                         40 _haskey::
      000003                         41 	.ds 1
      000004                         42 _gameRunning::
      000004                         43 	.ds 1
                                     44 ;--------------------------------------------------------
                                     45 ; ram data
                                     46 ;--------------------------------------------------------
                                     47 	.area _INITIALIZED
      000000                         48 _BackgroundTest::
      000000                         49 	.ds 360
      000168                         50 _BackgropundTiles::
      000168                         51 	.ds 64
      0001A8                         52 _PlacyHolder::
      0001A8                         53 	.ds 16
                                     54 ;--------------------------------------------------------
                                     55 ; absolute external ram data
                                     56 ;--------------------------------------------------------
                                     57 	.area _DABS (ABS)
                                     58 ;--------------------------------------------------------
                                     59 ; global & static initialisations
                                     60 ;--------------------------------------------------------
                                     61 	.area _HOME
                                     62 	.area _GSINIT
                                     63 	.area _GSFINAL
                                     64 	.area _GSINIT
                                     65 ;--------------------------------------------------------
                                     66 ; Home
                                     67 ;--------------------------------------------------------
                                     68 	.area _HOME
                                     69 	.area _HOME
                                     70 ;--------------------------------------------------------
                                     71 ; code
                                     72 ;--------------------------------------------------------
                                     73 	.area _CODE
                                     74 ;main.c:12: void performanceDelay(UINT8 numloops){
                                     75 ;	---------------------------------
                                     76 ; Function performanceDelay
                                     77 ; ---------------------------------
      000000                         78 _performanceDelay::
      000000 4F               [ 4]   79 	ld	c, a
                                     80 ;main.c:14: for(i = 0; i < numloops; i++){
      000001 06 00            [ 8]   81 	ld	b, #0x00
      000003                         82 00103$:
      000003 78               [ 4]   83 	ld	a, b
      000004 91               [ 4]   84 	sub	a, c
      000005 D0               [20]   85 	ret	NC
                                     86 ;main.c:15: wait_vbl_done();
      000006 CDr00r00         [24]   87 	call	_wait_vbl_done
                                     88 ;main.c:14: for(i = 0; i < numloops; i++){
      000009 04               [ 4]   89 	inc	b
                                     90 ;main.c:17: }
      00000A 18 F7            [12]   91 	jr	00103$
      00000C                         92 _blankMap:
      00000C 03                      93 	.db #0x03	;  3
                                     94 ;main.c:19: UBYTE canPlayerMove(UINT8 newPlayerx, UINT8 newPlayery) {
                                     95 ;	---------------------------------
                                     96 ; Function canPlayerMove
                                     97 ; ---------------------------------
      00000D                         98 _canPlayerMove::
      00000D E8 F8            [16]   99 	add	sp, #-8
      00000F F8 07            [12]  100 	ldhl	sp,	#7
      000011 32               [ 8]  101 	ld	(hl-), a
                                    102 ;main.c:24: indexTLx = (newPlayerx -8) / 8;
      000012 7B               [ 4]  103 	ld	a, e
      000013 22               [ 8]  104 	ld	(hl+), a
      000014 7E               [ 8]  105 	ld	a, (hl)
      000015 F8 02            [12]  106 	ldhl	sp,	#2
      000017 22               [ 8]  107 	ld	(hl+), a
      000018 AF               [ 4]  108 	xor	a, a
      000019 32               [ 8]  109 	ld	(hl-), a
      00001A 2A               [ 8]  110 	ld	a, (hl+)
      00001B 5F               [ 4]  111 	ld	e, a
      00001C 56               [ 8]  112 	ld	d, (hl)
      00001D 21 08 00         [12]  113 	ld	hl, #0x0008
      000020 7B               [ 4]  114 	ld	a, e
      000021 95               [ 4]  115 	sub	a, l
      000022 5F               [ 4]  116 	ld	e, a
      000023 7A               [ 4]  117 	ld	a, d
      000024 9C               [ 4]  118 	sbc	a, h
      000025 F8 05            [12]  119 	ldhl	sp,	#5
      000027 32               [ 8]  120 	ld	(hl-), a
      000028 73               [ 8]  121 	ld	(hl), e
      000029 2A               [ 8]  122 	ld	a, (hl+)
      00002A 4F               [ 4]  123 	ld	c, a
      00002B 46               [ 8]  124 	ld	b, (hl)
      00002C CB 7E            [12]  125 	bit	7, (hl)
      00002E 28 0C            [12]  126 	jr	Z, 00114$
      000030 2B               [ 8]  127 	dec	hl
      000031 2B               [ 8]  128 	dec	hl
      000032 2B               [ 8]  129 	dec	hl
      000033 2A               [ 8]  130 	ld	a, (hl+)
      000034 5F               [ 4]  131 	ld	e, a
      000035 56               [ 8]  132 	ld	d, (hl)
      000036 21 FF FF         [12]  133 	ld	hl, #0xffff
      000039 19               [ 8]  134 	add	hl, de
      00003A 4D               [ 4]  135 	ld	c, l
      00003B 44               [ 4]  136 	ld	b, h
      00003C                        137 00114$:
      00003C 33               [ 8]  138 	inc	sp
      00003D 33               [ 8]  139 	inc	sp
      00003E C5               [16]  140 	push	bc
      00003F F8 01            [12]  141 	ldhl	sp,	#1
      000041 CB 3E            [16]  142 	srl	(hl)
      000043 2B               [ 8]  143 	dec	hl
      000044 CB 1E            [16]  144 	rr	(hl)
      000046 23               [ 8]  145 	inc	hl
      000047 CB 3E            [16]  146 	srl	(hl)
      000049 2B               [ 8]  147 	dec	hl
      00004A CB 1E            [16]  148 	rr	(hl)
      00004C 23               [ 8]  149 	inc	hl
      00004D CB 3E            [16]  150 	srl	(hl)
      00004F 2B               [ 8]  151 	dec	hl
      000050 CB 1E            [16]  152 	rr	(hl)
                                    153 ;main.c:25: indexTLy = (newPlayery -16) / 8;
      000052 F8 06            [12]  154 	ldhl	sp,	#6
      000054 7E               [ 8]  155 	ld	a, (hl)
      000055 F8 02            [12]  156 	ldhl	sp,	#2
      000057 22               [ 8]  157 	ld	(hl+), a
      000058 AF               [ 4]  158 	xor	a, a
      000059 32               [ 8]  159 	ld	(hl-), a
      00005A 2A               [ 8]  160 	ld	a, (hl+)
      00005B 5F               [ 4]  161 	ld	e, a
      00005C 56               [ 8]  162 	ld	d, (hl)
      00005D 21 10 00         [12]  163 	ld	hl, #0x0010
      000060 7B               [ 4]  164 	ld	a, e
      000061 95               [ 4]  165 	sub	a, l
      000062 5F               [ 4]  166 	ld	e, a
      000063 7A               [ 4]  167 	ld	a, d
      000064 9C               [ 4]  168 	sbc	a, h
      000065 F8 05            [12]  169 	ldhl	sp,	#5
      000067 32               [ 8]  170 	ld	(hl-), a
      000068 73               [ 8]  171 	ld	(hl), e
      000069 2A               [ 8]  172 	ld	a, (hl+)
      00006A 4F               [ 4]  173 	ld	c, a
      00006B 46               [ 8]  174 	ld	b, (hl)
      00006C CB 7E            [12]  175 	bit	7, (hl)
      00006E 28 0C            [12]  176 	jr	Z, 00115$
      000070 2B               [ 8]  177 	dec	hl
      000071 2B               [ 8]  178 	dec	hl
      000072 2B               [ 8]  179 	dec	hl
      000073 2A               [ 8]  180 	ld	a, (hl+)
      000074 5F               [ 4]  181 	ld	e, a
      000075 56               [ 8]  182 	ld	d, (hl)
      000076 21 F7 FF         [12]  183 	ld	hl, #0xfff7
      000079 19               [ 8]  184 	add	hl, de
      00007A 4D               [ 4]  185 	ld	c, l
      00007B 44               [ 4]  186 	ld	b, h
      00007C                        187 00115$:
      00007C CB 38            [ 8]  188 	srl	b
      00007E CB 19            [ 8]  189 	rr	c
      000080 CB 38            [ 8]  190 	srl	b
      000082 CB 19            [ 8]  191 	rr	c
      000084 CB 38            [ 8]  192 	srl	b
      000086 CB 19            [ 8]  193 	rr	c
                                    194 ;main.c:27: tileIndexTL = 20 * indexTLy + indexTLx;
      000088 69               [ 4]  195 	ld	l, c
      000089 60               [ 4]  196 	ld	h, b
      00008A 29               [ 8]  197 	add	hl, hl
      00008B 29               [ 8]  198 	add	hl, hl
      00008C 09               [ 8]  199 	add	hl, bc
      00008D 29               [ 8]  200 	add	hl, hl
      00008E 29               [ 8]  201 	add	hl, hl
      00008F E5               [16]  202 	push	hl
      000090 7D               [ 4]  203 	ld	a, l
      000091 F8 06            [12]  204 	ldhl	sp,	#6
      000093 77               [ 8]  205 	ld	(hl), a
      000094 E1               [12]  206 	pop	hl
      000095 7C               [ 4]  207 	ld	a, h
      000096 F8 05            [12]  208 	ldhl	sp,	#5
      000098 32               [ 8]  209 	ld	(hl-), a
      000099 2A               [ 8]  210 	ld	a, (hl+)
      00009A 5F               [ 4]  211 	ld	e, a
      00009B 56               [ 8]  212 	ld	d, (hl)
      00009C E1               [12]  213 	pop	hl
      00009D E5               [16]  214 	push	hl
      00009E 19               [ 8]  215 	add	hl, de
      00009F 5D               [ 4]  216 	ld	e, l
      0000A0 7C               [ 4]  217 	ld	a, h
      0000A1 F8 02            [12]  218 	ldhl	sp,	#2
      0000A3 73               [ 8]  219 	ld	(hl), e
      0000A4 23               [ 8]  220 	inc	hl
      0000A5 77               [ 8]  221 	ld	(hl), a
                                    222 ;main.c:29: if(debug){
      0000A6 FAr02r00         [16]  223 	ld	a, (#_debug)
      0000A9 B7               [ 4]  224 	or	a, a
      0000AA 28 32            [12]  225 	jr	Z, 00102$
                                    226 ;main.c:30: printf("%u %u\n",(UINT16)(newPlayerx),(UINT16)(newPlayery));
      0000AC F8 06            [12]  227 	ldhl	sp,	#6
      0000AE 2A               [ 8]  228 	ld	a, (hl+)
      0000AF 5F               [ 4]  229 	ld	e, a
      0000B0 16 00            [ 8]  230 	ld	d, #0x00
      0000B2 7E               [ 8]  231 	ld	a, (hl)
      0000B3 F8 04            [12]  232 	ldhl	sp,	#4
      0000B5 22               [ 8]  233 	ld	(hl+), a
      0000B6 AF               [ 4]  234 	xor	a, a
      0000B7 32               [ 8]  235 	ld	(hl-), a
      0000B8 C5               [16]  236 	push	bc
      0000B9 D5               [16]  237 	push	de
      0000BA 2A               [ 8]  238 	ld	a, (hl+)
      0000BB 5F               [ 4]  239 	ld	e, a
      0000BC 56               [ 8]  240 	ld	d, (hl)
      0000BD D5               [16]  241 	push	de
      0000BE 11r6Dr01         [12]  242 	ld	de, #___str_0
      0000C1 D5               [16]  243 	push	de
      0000C2 CDr00r00         [24]  244 	call	_printf
      0000C5 E8 06            [16]  245 	add	sp, #6
      0000C7 C1               [12]  246 	pop	bc
                                    247 ;main.c:31: printf("%u %u %u\n",(UINT16)indexTLx,(UINT16)indexTLy,(UINT16)tileIndexTL);
      0000C8 F8 02            [12]  248 	ldhl	sp,	#2
      0000CA 2A               [ 8]  249 	ld	a, (hl+)
      0000CB 5F               [ 4]  250 	ld	e, a
      0000CC 56               [ 8]  251 	ld	d, (hl)
      0000CD D5               [16]  252 	push	de
      0000CE C5               [16]  253 	push	bc
      0000CF F8 04            [12]  254 	ldhl	sp,	#4
      0000D1 2A               [ 8]  255 	ld	a, (hl+)
      0000D2 5F               [ 4]  256 	ld	e, a
      0000D3 56               [ 8]  257 	ld	d, (hl)
      0000D4 D5               [16]  258 	push	de
      0000D5 11r74r01         [12]  259 	ld	de, #___str_1
      0000D8 D5               [16]  260 	push	de
      0000D9 CDr00r00         [24]  261 	call	_printf
      0000DC E8 08            [16]  262 	add	sp, #8
      0000DE                        263 00102$:
                                    264 ;main.c:34: result = BackgroundTest[tileIndexTL] == blankMap[0];
      0000DE 01r00r00         [12]  265 	ld	bc, #_BackgroundTest+0
      0000E1 F8 02            [12]  266 	ldhl	sp,	#2
      0000E3 2A               [ 8]  267 	ld	a,	(hl+)
      0000E4 66               [ 8]  268 	ld	h, (hl)
      0000E5 6F               [ 4]  269 	ld	l, a
      0000E6 09               [ 8]  270 	add	hl, bc
      0000E7 4D               [ 4]  271 	ld	c, l
      0000E8 44               [ 4]  272 	ld	b, h
      0000E9 0A               [ 8]  273 	ld	a, (bc)
      0000EA 5F               [ 4]  274 	ld	e, a
      0000EB 16 00            [ 8]  275 	ld	d, #0x00
      0000ED 01r0Cr00         [12]  276 	ld	bc, #_blankMap+0
      0000F0 0A               [ 8]  277 	ld	a, (bc)
      0000F1 6F               [ 4]  278 	ld	l, a
                                    279 ;	spillPairReg hl
                                    280 ;	spillPairReg hl
      0000F2 07               [ 4]  281 	rlca
      0000F3 9F               [ 4]  282 	sbc	a, a
      0000F4 67               [ 4]  283 	ld	h, a
                                    284 ;	spillPairReg hl
                                    285 ;	spillPairReg hl
      0000F5 7D               [ 4]  286 	ld	a, l
      0000F6 93               [ 4]  287 	sub	a, e
      0000F7 20 06            [12]  288 	jr	NZ, 00151$
      0000F9 7C               [ 4]  289 	ld	a, h
      0000FA 92               [ 4]  290 	sub	a, d
      0000FB 3E 01            [ 8]  291 	ld	a, #0x01
      0000FD 28 01            [12]  292 	jr	Z, 00152$
      0000FF                        293 00151$:
      0000FF AF               [ 4]  294 	xor	a, a
      000100                        295 00152$:
      000100 5F               [ 4]  296 	ld	e, a
                                    297 ;main.c:36: if(tileIndexTL==321){
      000101 F8 02            [12]  298 	ldhl	sp,	#2
      000103 7E               [ 8]  299 	ld	a, (hl)
      000104 D6 41            [ 8]  300 	sub	a, #0x41
      000106 20 1C            [12]  301 	jr	NZ, 00110$
      000108 23               [ 8]  302 	inc	hl
      000109 7E               [ 8]  303 	ld	a, (hl)
      00010A 3D               [ 4]  304 	dec	a
      00010B 20 17            [12]  305 	jr	NZ, 00110$
                                    306 ;main.c:38: set_bkg_tiles(1, 16, 1, 1, blankMap);
      00010D C5               [16]  307 	push	bc
      00010E 21 01 01         [12]  308 	ld	hl, #0x101
      000111 E5               [16]  309 	push	hl
      000112 21 01 10         [12]  310 	ld	hl, #0x1001
      000115 E5               [16]  311 	push	hl
      000116 CDr00r00         [24]  312 	call	_set_bkg_tiles
      000119 E8 06            [16]  313 	add	sp, #6
                                    314 ;main.c:39: haskey = 1;
      00011B 21r03r00         [12]  315 	ld	hl, #_haskey
      00011E 36 01            [12]  316 	ld	(hl), #0x01
                                    317 ;main.c:40: result = 1;
      000120 1E 01            [ 8]  318 	ld	e, #0x01
      000122 18 45            [12]  319 	jr	00111$
      000124                        320 00110$:
                                    321 ;main.c:41: } else if(tileIndexTL == 263 && haskey == 1){
      000124 F8 02            [12]  322 	ldhl	sp,	#2
      000126 7E               [ 8]  323 	ld	a, (hl)
      000127 D6 07            [ 8]  324 	sub	a, #0x07
      000129 20 1D            [12]  325 	jr	NZ, 00106$
      00012B 23               [ 8]  326 	inc	hl
      00012C 7E               [ 8]  327 	ld	a, (hl)
      00012D 3D               [ 4]  328 	dec	a
      00012E 20 18            [12]  329 	jr	NZ, 00106$
      000130 FAr03r00         [16]  330 	ld	a, (#_haskey)
      000133 3D               [ 4]  331 	dec	a
      000134 20 12            [12]  332 	jr	NZ, 00106$
                                    333 ;main.c:43: set_bkg_tiles(3, 13, 1, 1, blankMap);
      000136 C5               [16]  334 	push	bc
      000137 21 01 01         [12]  335 	ld	hl, #0x101
      00013A E5               [16]  336 	push	hl
      00013B 21 03 0D         [12]  337 	ld	hl, #0xd03
      00013E E5               [16]  338 	push	hl
      00013F CDr00r00         [24]  339 	call	_set_bkg_tiles
      000142 E8 06            [16]  340 	add	sp, #6
                                    341 ;main.c:44: result = 1;
      000144 1E 01            [ 8]  342 	ld	e, #0x01
      000146 18 21            [12]  343 	jr	00111$
      000148                        344 00106$:
                                    345 ;main.c:45: } else if(tileIndexTL==340){
      000148 F8 02            [12]  346 	ldhl	sp,	#2
      00014A 7E               [ 8]  347 	ld	a, (hl)
      00014B D6 54            [ 8]  348 	sub	a, #0x54
      00014D 20 1A            [12]  349 	jr	NZ, 00111$
      00014F 23               [ 8]  350 	inc	hl
      000150 7E               [ 8]  351 	ld	a, (hl)
      000151 3D               [ 4]  352 	dec	a
      000152 20 15            [12]  353 	jr	NZ, 00111$
                                    354 ;main.c:47: gameRunning = 0;
      000154 21r04r00         [12]  355 	ld	hl, #_gameRunning
      000157 36 00            [12]  356 	ld	(hl), #0x00
                                    357 ;main.c:48: HIDE_SPRITES;
      000159 F0r00            [12]  358 	ldh	a, (_LCDC_REG + 0)
      00015B E6 FD            [ 8]  359 	and	a, #0xfd
      00015D E0r00            [12]  360 	ldh	(_LCDC_REG + 0), a
                                    361 ;main.c:49: printf("\n \n \n \n \n \n \n \n \n       You Win!");
      00015F 11r7Er01         [12]  362 	ld	de, #___str_2
      000162 D5               [16]  363 	push	de
      000163 CDr00r00         [24]  364 	call	_printf
      000166 E1               [12]  365 	pop	hl
                                    366 ;main.c:50: result = 1;
      000167 1E 01            [ 8]  367 	ld	e, #0x01
      000169                        368 00111$:
                                    369 ;main.c:53: return result;
      000169 7B               [ 4]  370 	ld	a, e
                                    371 ;main.c:55: }
      00016A E8 08            [16]  372 	add	sp, #8
      00016C C9               [16]  373 	ret
      00016D                        374 ___str_0:
      00016D 25 75 20 25 75         375 	.ascii "%u %u"
      000172 0A                     376 	.db 0x0a
      000173 00                     377 	.db 0x00
      000174                        378 ___str_1:
      000174 25 75 20 25 75 20 25   379 	.ascii "%u %u %u"
             75
      00017C 0A                     380 	.db 0x0a
      00017D 00                     381 	.db 0x00
      00017E                        382 ___str_2:
      00017E 0A                     383 	.db 0x0a
      00017F 20                     384 	.ascii " "
      000180 0A                     385 	.db 0x0a
      000181 20                     386 	.ascii " "
      000182 0A                     387 	.db 0x0a
      000183 20                     388 	.ascii " "
      000184 0A                     389 	.db 0x0a
      000185 20                     390 	.ascii " "
      000186 0A                     391 	.db 0x0a
      000187 20                     392 	.ascii " "
      000188 0A                     393 	.db 0x0a
      000189 20                     394 	.ascii " "
      00018A 0A                     395 	.db 0x0a
      00018B 20                     396 	.ascii " "
      00018C 0A                     397 	.db 0x0a
      00018D 20                     398 	.ascii " "
      00018E 0A                     399 	.db 0x0a
      00018F 20 20 20 20 20 20 20   400 	.ascii "       You Win!"
             59 6F 75 20 57 69 6E
             21
      00019E 00                     401 	.db 0x00
                                    402 ;main.c:57: void animateSprite(UINT8 spriteIndex, INT8 moveX, INT8 moveY) {
                                    403 ;	---------------------------------
                                    404 ; Function animateSprite
                                    405 ; ---------------------------------
      00019F                        406 _animateSprite::
      00019F 4F               [ 4]  407 	ld	c, a
      0001A0 43               [ 4]  408 	ld	b, e
                                    409 ;main.c:58: while(moveX != 0) {
      0001A1                        410 00101$:
      0001A1 78               [ 4]  411 	ld	a, b
      0001A2 B7               [ 4]  412 	or	a, a
      0001A3 28 30            [12]  413 	jr	Z, 00104$
                                    414 ;main.c:59: scroll_sprite(spriteIndex, moveX < 0 ? -1 : 1, 0);
      0001A5 CB 78            [ 8]  415 	bit	7, b
      0001A7 28 05            [12]  416 	jr	Z, 00111$
      0001A9 11 FF FF         [12]  417 	ld	de, #0xffff
      0001AC 18 03            [12]  418 	jr	00112$
      0001AE                        419 00111$:
      0001AE 11 01 00         [12]  420 	ld	de, #0x0001
      0001B1                        421 00112$:
                                    422 ;D:/Enviromental-Variables/gbdk/include/gb/gb.h:1691: OAM_item_t * itm = &shadow_OAM[nb];
      0001B1 69               [ 4]  423 	ld	l, c
                                    424 ;	spillPairReg hl
                                    425 ;	spillPairReg hl
      0001B2 26 00            [ 8]  426 	ld	h, #0x00
                                    427 ;	spillPairReg hl
                                    428 ;	spillPairReg hl
      0001B4 29               [ 8]  429 	add	hl, hl
      0001B5 29               [ 8]  430 	add	hl, hl
      0001B6 D5               [16]  431 	push	de
      0001B7 11r00r00         [12]  432 	ld	de, #_shadow_OAM
      0001BA 19               [ 8]  433 	add	hl, de
      0001BB D1               [12]  434 	pop	de
                                    435 ;D:/Enviromental-Variables/gbdk/include/gb/gb.h:1692: itm->y+=y, itm->x+=x;
      0001BC 7E               [ 8]  436 	ld	a, (hl)
      0001BD 22               [ 8]  437 	ld	(hl+), a
      0001BE 7E               [ 8]  438 	ld	a, (hl)
      0001BF 83               [ 4]  439 	add	a, e
      0001C0 77               [ 8]  440 	ld	(hl), a
                                    441 ;main.c:60: moveX += moveX < 0 ? 1 : -1;
      0001C1 CB 78            [ 8]  442 	bit	7, b
      0001C3 28 05            [12]  443 	jr	Z, 00113$
      0001C5 11 01 00         [12]  444 	ld	de, #0x0001
      0001C8 18 03            [12]  445 	jr	00114$
      0001CA                        446 00113$:
      0001CA 11 FF FF         [12]  447 	ld	de, #0xffff
      0001CD                        448 00114$:
      0001CD 7B               [ 4]  449 	ld	a, e
      0001CE 80               [ 4]  450 	add	a, b
      0001CF 47               [ 4]  451 	ld	b, a
                                    452 ;main.c:61: wait_vbl_done();
      0001D0 CDr00r00         [24]  453 	call	_wait_vbl_done
      0001D3 18 CC            [12]  454 	jr	00101$
                                    455 ;main.c:64: while(moveY != 0) {
      0001D5                        456 00104$:
      0001D5 F8 02            [12]  457 	ldhl	sp,	#2
      0001D7 7E               [ 8]  458 	ld	a, (hl)
      0001D8 B7               [ 4]  459 	or	a, a
      0001D9 28 33            [12]  460 	jr	Z, 00109$
                                    461 ;main.c:65: scroll_sprite(spriteIndex, 0, moveY < 0 ? -1 : 1);
      0001DB CB 7E            [12]  462 	bit	7, (hl)
      0001DD 28 05            [12]  463 	jr	Z, 00115$
      0001DF 11 FF FF         [12]  464 	ld	de, #0xffff
      0001E2 18 03            [12]  465 	jr	00116$
      0001E4                        466 00115$:
      0001E4 11 01 00         [12]  467 	ld	de, #0x0001
      0001E7                        468 00116$:
      0001E7 43               [ 4]  469 	ld	b, e
                                    470 ;D:/Enviromental-Variables/gbdk/include/gb/gb.h:1691: OAM_item_t * itm = &shadow_OAM[nb];
      0001E8 11r00r00         [12]  471 	ld	de, #_shadow_OAM+0
      0001EB 69               [ 4]  472 	ld	l, c
                                    473 ;	spillPairReg hl
                                    474 ;	spillPairReg hl
      0001EC 26 00            [ 8]  475 	ld	h, #0x00
                                    476 ;	spillPairReg hl
                                    477 ;	spillPairReg hl
      0001EE 29               [ 8]  478 	add	hl, hl
      0001EF 29               [ 8]  479 	add	hl, hl
      0001F0 19               [ 8]  480 	add	hl, de
                                    481 ;D:/Enviromental-Variables/gbdk/include/gb/gb.h:1692: itm->y+=y, itm->x+=x;
      0001F1 7E               [ 8]  482 	ld	a, (hl)
      0001F2 80               [ 4]  483 	add	a, b
      0001F3 22               [ 8]  484 	ld	(hl+), a
      0001F4 7E               [ 8]  485 	ld	a, (hl)
      0001F5 77               [ 8]  486 	ld	(hl), a
                                    487 ;main.c:66: moveY += moveY < 0 ? 1 : -1;
      0001F6 F8 02            [12]  488 	ldhl	sp,	#2
      0001F8 CB 7E            [12]  489 	bit	7, (hl)
      0001FA 28 05            [12]  490 	jr	Z, 00117$
      0001FC 11 01 00         [12]  491 	ld	de, #0x0001
      0001FF 18 03            [12]  492 	jr	00118$
      000201                        493 00117$:
      000201 11 FF FF         [12]  494 	ld	de, #0xffff
      000204                        495 00118$:
      000204 7B               [ 4]  496 	ld	a, e
      000205 F8 02            [12]  497 	ldhl	sp,	#2
      000207 86               [ 8]  498 	add	a, (hl)
      000208 77               [ 8]  499 	ld	(hl), a
                                    500 ;main.c:67: wait_vbl_done();
      000209 CDr00r00         [24]  501 	call	_wait_vbl_done
      00020C 18 C7            [12]  502 	jr	00104$
      00020E                        503 00109$:
                                    504 ;main.c:69: }
      00020E E1               [12]  505 	pop	hl
      00020F 33               [ 8]  506 	inc	sp
      000210 E9               [ 4]  507 	jp	(hl)
                                    508 ;main.c:71: void main(){
                                    509 ;	---------------------------------
                                    510 ; Function main
                                    511 ; ---------------------------------
      000211                        512 _main::
                                    513 ;main.c:73: set_bkg_data(0, 3, BackgropundTiles);
      000211 11r68r01         [12]  514 	ld	de, #_BackgropundTiles
      000214 D5               [16]  515 	push	de
      000215 21 00 03         [12]  516 	ld	hl, #0x300
      000218 E5               [16]  517 	push	hl
      000219 CDr00r00         [24]  518 	call	_set_bkg_data
      00021C E8 04            [16]  519 	add	sp, #4
                                    520 ;main.c:74: set_bkg_tiles(0, 0, 20, 18, BackgroundTest);
      00021E 11r00r00         [12]  521 	ld	de, #_BackgroundTest
      000221 D5               [16]  522 	push	de
      000222 21 14 12         [12]  523 	ld	hl, #0x1214
      000225 E5               [16]  524 	push	hl
      000226 AF               [ 4]  525 	xor	a, a
      000227 0F               [ 4]  526 	rrca
      000228 F5               [16]  527 	push	af
      000229 CDr00r00         [24]  528 	call	_set_bkg_tiles
      00022C E8 06            [16]  529 	add	sp, #6
                                    530 ;main.c:76: set_sprite_data(0, 1, PlacyHolder);
      00022E 11rA8r01         [12]  531 	ld	de, #_PlacyHolder
      000231 D5               [16]  532 	push	de
      000232 AF               [ 4]  533 	xor	a, a
      000233 3C               [ 4]  534 	inc	a
      000234 F5               [16]  535 	push	af
      000235 CDr00r00         [24]  536 	call	_set_sprite_data
      000238 E8 04            [16]  537 	add	sp, #4
                                    538 ;D:/Enviromental-Variables/gbdk/include/gb/gb.h:1602: shadow_OAM[nb].tile=tile;
      00023A 21r02r00         [12]  539 	ld	hl, #(_shadow_OAM + 2)
      00023D 36 00            [12]  540 	ld	(hl), #0x00
                                    541 ;main.c:79: playerLocation[0] = 16;
      00023F 21r00r00         [12]  542 	ld	hl, #_playerLocation
      000242 36 10            [12]  543 	ld	(hl), #0x10
                                    544 ;main.c:80: playerLocation[1] = 24;
      000244 21r01r00         [12]  545 	ld	hl, #(_playerLocation + 1)
      000247 36 18            [12]  546 	ld	(hl), #0x18
                                    547 ;main.c:82: move_sprite(0, playerLocation[0], playerLocation[1]);
      000249 21r01r00         [12]  548 	ld	hl, #(_playerLocation + 1)
      00024C 46               [ 8]  549 	ld	b, (hl)
      00024D 21r00r00         [12]  550 	ld	hl, #_playerLocation
      000250 4E               [ 8]  551 	ld	c, (hl)
                                    552 ;D:/Enviromental-Variables/gbdk/include/gb/gb.h:1675: OAM_item_t * itm = &shadow_OAM[nb];
      000251 21r00r00         [12]  553 	ld	hl, #_shadow_OAM
                                    554 ;D:/Enviromental-Variables/gbdk/include/gb/gb.h:1676: itm->y=y, itm->x=x;
      000254 78               [ 4]  555 	ld	a, b
      000255 22               [ 8]  556 	ld	(hl+), a
      000256 71               [ 8]  557 	ld	(hl), c
                                    558 ;main.c:84: gameRunning = 1;
      000257 21r04r00         [12]  559 	ld	hl, #_gameRunning
      00025A 36 01            [12]  560 	ld	(hl), #0x01
                                    561 ;main.c:87: SHOW_SPRITES;
      00025C F0r00            [12]  562 	ldh	a, (_LCDC_REG + 0)
      00025E F6 02            [ 8]  563 	or	a, #0x02
      000260 E0r00            [12]  564 	ldh	(_LCDC_REG + 0), a
                                    565 ;main.c:88: SHOW_BKG;
      000262 F0r00            [12]  566 	ldh	a, (_LCDC_REG + 0)
      000264 F6 01            [ 8]  567 	or	a, #0x01
      000266 E0r00            [12]  568 	ldh	(_LCDC_REG + 0), a
                                    569 ;main.c:89: DISPLAY_ON;
      000268 F0r00            [12]  570 	ldh	a, (_LCDC_REG + 0)
      00026A F6 80            [ 8]  571 	or	a, #0x80
      00026C E0r00            [12]  572 	ldh	(_LCDC_REG + 0), a
                                    573 ;main.c:93: while(gameRunning){
      00026E                        574 00122$:
      00026E FAr04r00         [16]  575 	ld	a, (#_gameRunning)
      000271 B7               [ 4]  576 	or	a, a
      000272 C8               [20]  577 	ret	Z
                                    578 ;main.c:94: if(joypad() & J_A){
      000273 CDr00r00         [24]  579 	call	_joypad
      000276 CB 67            [ 8]  580 	bit	4, a
      000278 28 05            [12]  581 	jr	Z, 00102$
                                    582 ;main.c:95: debug = 1;
      00027A 21r02r00         [12]  583 	ld	hl, #_debug
      00027D 36 01            [12]  584 	ld	(hl), #0x01
      00027F                        585 00102$:
                                    586 ;main.c:97: if(joypad() & J_LEFT){
      00027F CDr00r00         [24]  587 	call	_joypad
      000282 CB 4F            [ 8]  588 	bit	1, a
      000284 28 25            [12]  589 	jr	Z, 00120$
                                    590 ;main.c:98: if(canPlayerMove(playerLocation[0]-8, playerLocation[1])){
      000286 21r01r00         [12]  591 	ld	hl, #(_playerLocation + 1)
      000289 4E               [ 8]  592 	ld	c, (hl)
      00028A FAr00r00         [16]  593 	ld	a, (#_playerLocation + 0)
      00028D C6 F8            [ 8]  594 	add	a, #0xf8
      00028F 59               [ 4]  595 	ld	e, c
      000290 CDr0Dr00         [24]  596 	call	_canPlayerMove
      000293 B7               [ 4]  597 	or	a, a
      000294 CAr2Ar03         [16]  598 	jp	Z, 00121$
                                    599 ;main.c:99: playerLocation[0] -= 8;
      000297 FAr00r00         [16]  600 	ld	a, (#_playerLocation + 0)
      00029A C6 F8            [ 8]  601 	add	a, #0xf8
      00029C EAr00r00         [16]  602 	ld	(#_playerLocation),a
                                    603 ;main.c:100: animateSprite(0,-8,0);
      00029F AF               [ 4]  604 	xor	a, a
      0002A0 F5               [16]  605 	push	af
      0002A1 33               [ 8]  606 	inc	sp
      0002A2 1E F8            [ 8]  607 	ld	e, #0xf8
      0002A4 AF               [ 4]  608 	xor	a, a
      0002A5 CDr9Fr01         [24]  609 	call	_animateSprite
      0002A8 C3r2Ar03         [16]  610 	jp	00121$
      0002AB                        611 00120$:
                                    612 ;main.c:103: else if(joypad() & J_RIGHT) {
      0002AB CDr00r00         [24]  613 	call	_joypad
      0002AE 0F               [ 4]  614 	rrca
      0002AF 30 23            [12]  615 	jr	NC, 00117$
                                    616 ;main.c:104: if(canPlayerMove(playerLocation[0]+8, playerLocation[1])){
      0002B1 21r01r00         [12]  617 	ld	hl, #(_playerLocation + 1)
      0002B4 46               [ 8]  618 	ld	b, (hl)
      0002B5 FAr00r00         [16]  619 	ld	a, (#_playerLocation + 0)
      0002B8 C6 08            [ 8]  620 	add	a, #0x08
      0002BA 58               [ 4]  621 	ld	e, b
      0002BB CDr0Dr00         [24]  622 	call	_canPlayerMove
      0002BE B7               [ 4]  623 	or	a, a
      0002BF 28 69            [12]  624 	jr	Z, 00121$
                                    625 ;main.c:105: playerLocation[0] += 8;
      0002C1 FAr00r00         [16]  626 	ld	a, (#_playerLocation + 0)
      0002C4 C6 08            [ 8]  627 	add	a, #0x08
      0002C6 EAr00r00         [16]  628 	ld	(#_playerLocation),a
                                    629 ;main.c:106: animateSprite(0,8,0);
      0002C9 AF               [ 4]  630 	xor	a, a
      0002CA F5               [16]  631 	push	af
      0002CB 33               [ 8]  632 	inc	sp
      0002CC 1E 08            [ 8]  633 	ld	e, #0x08
      0002CE AF               [ 4]  634 	xor	a, a
      0002CF CDr9Fr01         [24]  635 	call	_animateSprite
      0002D2 18 56            [12]  636 	jr	00121$
      0002D4                        637 00117$:
                                    638 ;main.c:109: else if(joypad() & J_UP) {
      0002D4 CDr00r00         [24]  639 	call	_joypad
      0002D7 CB 57            [ 8]  640 	bit	2, a
      0002D9 28 25            [12]  641 	jr	Z, 00114$
                                    642 ;main.c:110: if(canPlayerMove(playerLocation[0], playerLocation[1] - 8)){
      0002DB FAr01r00         [16]  643 	ld	a, (#(_playerLocation + 1) + 0)
      0002DE C6 F8            [ 8]  644 	add	a, #0xf8
      0002E0 4F               [ 4]  645 	ld	c, a
      0002E1 21r00r00         [12]  646 	ld	hl, #_playerLocation
      0002E4 46               [ 8]  647 	ld	b, (hl)
      0002E5 59               [ 4]  648 	ld	e, c
      0002E6 78               [ 4]  649 	ld	a, b
      0002E7 CDr0Dr00         [24]  650 	call	_canPlayerMove
      0002EA B7               [ 4]  651 	or	a, a
      0002EB 28 3D            [12]  652 	jr	Z, 00121$
                                    653 ;main.c:111: playerLocation[1] -= 8;
      0002ED FAr01r00         [16]  654 	ld	a, (#(_playerLocation + 1) + 0)
      0002F0 C6 F8            [ 8]  655 	add	a, #0xf8
      0002F2 EAr01r00         [16]  656 	ld	(#(_playerLocation + 1)),a
                                    657 ;main.c:112: animateSprite(0,0,-8);
      0002F5 3E F8            [ 8]  658 	ld	a, #0xf8
      0002F7 F5               [16]  659 	push	af
      0002F8 33               [ 8]  660 	inc	sp
      0002F9 AF               [ 4]  661 	xor	a, a
      0002FA 5F               [ 4]  662 	ld	e, a
      0002FB CDr9Fr01         [24]  663 	call	_animateSprite
      0002FE 18 2A            [12]  664 	jr	00121$
      000300                        665 00114$:
                                    666 ;main.c:115: else if(joypad() & J_DOWN) {
      000300 CDr00r00         [24]  667 	call	_joypad
      000303 CB 5F            [ 8]  668 	bit	3, a
      000305 28 23            [12]  669 	jr	Z, 00121$
                                    670 ;main.c:116: if(canPlayerMove(playerLocation[0], playerLocation[1] + 8)){
      000307 FAr01r00         [16]  671 	ld	a, (#(_playerLocation + 1) + 0)
      00030A C6 08            [ 8]  672 	add	a, #0x08
      00030C 4F               [ 4]  673 	ld	c, a
      00030D 21r00r00         [12]  674 	ld	hl, #_playerLocation
      000310 46               [ 8]  675 	ld	b, (hl)
      000311 59               [ 4]  676 	ld	e, c
      000312 78               [ 4]  677 	ld	a, b
      000313 CDr0Dr00         [24]  678 	call	_canPlayerMove
      000316 B7               [ 4]  679 	or	a, a
      000317 28 11            [12]  680 	jr	Z, 00121$
                                    681 ;main.c:117: playerLocation[1] += 8;
      000319 FAr01r00         [16]  682 	ld	a, (#(_playerLocation + 1) + 0)
      00031C C6 08            [ 8]  683 	add	a, #0x08
      00031E EAr01r00         [16]  684 	ld	(#(_playerLocation + 1)),a
                                    685 ;main.c:118: animateSprite(0,0,8);
      000321 3E 08            [ 8]  686 	ld	a, #0x08
      000323 F5               [16]  687 	push	af
      000324 33               [ 8]  688 	inc	sp
      000325 AF               [ 4]  689 	xor	a, a
      000326 5F               [ 4]  690 	ld	e, a
      000327 CDr9Fr01         [24]  691 	call	_animateSprite
      00032A                        692 00121$:
                                    693 ;main.c:122: performanceDelay(6);
      00032A 3E 06            [ 8]  694 	ld	a, #0x06
      00032C CDr00r00         [24]  695 	call	_performanceDelay
                                    696 ;main.c:126: }
      00032F C3r6Er02         [16]  697 	jp	00122$
                                    698 	.area _CODE
                                    699 	.area _INITIALIZER
      000000                        700 __xinit__BackgroundTest:
      000000 00                     701 	.db #0x00	; 0
      000001 00                     702 	.db #0x00	; 0
      000002 00                     703 	.db #0x00	; 0
      000003 00                     704 	.db #0x00	; 0
      000004 00                     705 	.db #0x00	; 0
      000005 00                     706 	.db #0x00	; 0
      000006 00                     707 	.db #0x00	; 0
      000007 00                     708 	.db #0x00	; 0
      000008 00                     709 	.db #0x00	; 0
      000009 00                     710 	.db #0x00	; 0
      00000A 00                     711 	.db #0x00	; 0
      00000B 00                     712 	.db #0x00	; 0
      00000C 00                     713 	.db #0x00	; 0
      00000D 00                     714 	.db #0x00	; 0
      00000E 00                     715 	.db #0x00	; 0
      00000F 00                     716 	.db #0x00	; 0
      000010 00                     717 	.db #0x00	; 0
      000011 00                     718 	.db #0x00	; 0
      000012 00                     719 	.db #0x00	; 0
      000013 00                     720 	.db #0x00	; 0
      000014 00                     721 	.db #0x00	; 0
      000015 03                     722 	.db #0x03	; 3
      000016 00                     723 	.db #0x00	; 0
      000017 03                     724 	.db #0x03	; 3
      000018 03                     725 	.db #0x03	; 3
      000019 03                     726 	.db #0x03	; 3
      00001A 03                     727 	.db #0x03	; 3
      00001B 03                     728 	.db #0x03	; 3
      00001C 03                     729 	.db #0x03	; 3
      00001D 03                     730 	.db #0x03	; 3
      00001E 03                     731 	.db #0x03	; 3
      00001F 03                     732 	.db #0x03	; 3
      000020 03                     733 	.db #0x03	; 3
      000021 03                     734 	.db #0x03	; 3
      000022 03                     735 	.db #0x03	; 3
      000023 03                     736 	.db #0x03	; 3
      000024 03                     737 	.db #0x03	; 3
      000025 03                     738 	.db #0x03	; 3
      000026 03                     739 	.db #0x03	; 3
      000027 00                     740 	.db #0x00	; 0
      000028 00                     741 	.db #0x00	; 0
      000029 03                     742 	.db #0x03	; 3
      00002A 00                     743 	.db #0x00	; 0
      00002B 03                     744 	.db #0x03	; 3
      00002C 00                     745 	.db #0x00	; 0
      00002D 00                     746 	.db #0x00	; 0
      00002E 00                     747 	.db #0x00	; 0
      00002F 00                     748 	.db #0x00	; 0
      000030 00                     749 	.db #0x00	; 0
      000031 00                     750 	.db #0x00	; 0
      000032 03                     751 	.db #0x03	; 3
      000033 00                     752 	.db #0x00	; 0
      000034 00                     753 	.db #0x00	; 0
      000035 00                     754 	.db #0x00	; 0
      000036 00                     755 	.db #0x00	; 0
      000037 00                     756 	.db #0x00	; 0
      000038 00                     757 	.db #0x00	; 0
      000039 00                     758 	.db #0x00	; 0
      00003A 03                     759 	.db #0x03	; 3
      00003B 00                     760 	.db #0x00	; 0
      00003C 00                     761 	.db #0x00	; 0
      00003D 03                     762 	.db #0x03	; 3
      00003E 00                     763 	.db #0x00	; 0
      00003F 03                     764 	.db #0x03	; 3
      000040 00                     765 	.db #0x00	; 0
      000041 03                     766 	.db #0x03	; 3
      000042 03                     767 	.db #0x03	; 3
      000043 03                     768 	.db #0x03	; 3
      000044 03                     769 	.db #0x03	; 3
      000045 00                     770 	.db #0x00	; 0
      000046 03                     771 	.db #0x03	; 3
      000047 00                     772 	.db #0x00	; 0
      000048 03                     773 	.db #0x03	; 3
      000049 03                     774 	.db #0x03	; 3
      00004A 03                     775 	.db #0x03	; 3
      00004B 03                     776 	.db #0x03	; 3
      00004C 03                     777 	.db #0x03	; 3
      00004D 00                     778 	.db #0x00	; 0
      00004E 03                     779 	.db #0x03	; 3
      00004F 00                     780 	.db #0x00	; 0
      000050 00                     781 	.db #0x00	; 0
      000051 03                     782 	.db #0x03	; 3
      000052 00                     783 	.db #0x00	; 0
      000053 03                     784 	.db #0x03	; 3
      000054 00                     785 	.db #0x00	; 0
      000055 03                     786 	.db #0x03	; 3
      000056 00                     787 	.db #0x00	; 0
      000057 00                     788 	.db #0x00	; 0
      000058 00                     789 	.db #0x00	; 0
      000059 00                     790 	.db #0x00	; 0
      00005A 03                     791 	.db #0x03	; 3
      00005B 00                     792 	.db #0x00	; 0
      00005C 03                     793 	.db #0x03	; 3
      00005D 00                     794 	.db #0x00	; 0
      00005E 00                     795 	.db #0x00	; 0
      00005F 00                     796 	.db #0x00	; 0
      000060 00                     797 	.db #0x00	; 0
      000061 00                     798 	.db #0x00	; 0
      000062 03                     799 	.db #0x03	; 3
      000063 00                     800 	.db #0x00	; 0
      000064 00                     801 	.db #0x00	; 0
      000065 03                     802 	.db #0x03	; 3
      000066 00                     803 	.db #0x00	; 0
      000067 03                     804 	.db #0x03	; 3
      000068 00                     805 	.db #0x00	; 0
      000069 03                     806 	.db #0x03	; 3
      00006A 03                     807 	.db #0x03	; 3
      00006B 03                     808 	.db #0x03	; 3
      00006C 03                     809 	.db #0x03	; 3
      00006D 03                     810 	.db #0x03	; 3
      00006E 03                     811 	.db #0x03	; 3
      00006F 00                     812 	.db #0x00	; 0
      000070 03                     813 	.db #0x03	; 3
      000071 03                     814 	.db #0x03	; 3
      000072 03                     815 	.db #0x03	; 3
      000073 03                     816 	.db #0x03	; 3
      000074 03                     817 	.db #0x03	; 3
      000075 03                     818 	.db #0x03	; 3
      000076 03                     819 	.db #0x03	; 3
      000077 00                     820 	.db #0x00	; 0
      000078 00                     821 	.db #0x00	; 0
      000079 03                     822 	.db #0x03	; 3
      00007A 00                     823 	.db #0x00	; 0
      00007B 03                     824 	.db #0x03	; 3
      00007C 00                     825 	.db #0x00	; 0
      00007D 03                     826 	.db #0x03	; 3
      00007E 00                     827 	.db #0x00	; 0
      00007F 00                     828 	.db #0x00	; 0
      000080 00                     829 	.db #0x00	; 0
      000081 00                     830 	.db #0x00	; 0
      000082 00                     831 	.db #0x00	; 0
      000083 00                     832 	.db #0x00	; 0
      000084 03                     833 	.db #0x03	; 3
      000085 00                     834 	.db #0x00	; 0
      000086 00                     835 	.db #0x00	; 0
      000087 00                     836 	.db #0x00	; 0
      000088 00                     837 	.db #0x00	; 0
      000089 00                     838 	.db #0x00	; 0
      00008A 00                     839 	.db #0x00	; 0
      00008B 00                     840 	.db #0x00	; 0
      00008C 00                     841 	.db #0x00	; 0
      00008D 03                     842 	.db #0x03	; 3
      00008E 00                     843 	.db #0x00	; 0
      00008F 03                     844 	.db #0x03	; 3
      000090 00                     845 	.db #0x00	; 0
      000091 03                     846 	.db #0x03	; 3
      000092 00                     847 	.db #0x00	; 0
      000093 03                     848 	.db #0x03	; 3
      000094 03                     849 	.db #0x03	; 3
      000095 03                     850 	.db #0x03	; 3
      000096 03                     851 	.db #0x03	; 3
      000097 03                     852 	.db #0x03	; 3
      000098 03                     853 	.db #0x03	; 3
      000099 00                     854 	.db #0x00	; 0
      00009A 03                     855 	.db #0x03	; 3
      00009B 03                     856 	.db #0x03	; 3
      00009C 03                     857 	.db #0x03	; 3
      00009D 03                     858 	.db #0x03	; 3
      00009E 03                     859 	.db #0x03	; 3
      00009F 00                     860 	.db #0x00	; 0
      0000A0 00                     861 	.db #0x00	; 0
      0000A1 03                     862 	.db #0x03	; 3
      0000A2 03                     863 	.db #0x03	; 3
      0000A3 03                     864 	.db #0x03	; 3
      0000A4 00                     865 	.db #0x00	; 0
      0000A5 03                     866 	.db #0x03	; 3
      0000A6 00                     867 	.db #0x00	; 0
      0000A7 03                     868 	.db #0x03	; 3
      0000A8 00                     869 	.db #0x00	; 0
      0000A9 00                     870 	.db #0x00	; 0
      0000AA 00                     871 	.db #0x00	; 0
      0000AB 00                     872 	.db #0x00	; 0
      0000AC 00                     873 	.db #0x00	; 0
      0000AD 00                     874 	.db #0x00	; 0
      0000AE 03                     875 	.db #0x03	; 3
      0000AF 00                     876 	.db #0x00	; 0
      0000B0 00                     877 	.db #0x00	; 0
      0000B1 00                     878 	.db #0x00	; 0
      0000B2 03                     879 	.db #0x03	; 3
      0000B3 00                     880 	.db #0x00	; 0
      0000B4 00                     881 	.db #0x00	; 0
      0000B5 00                     882 	.db #0x00	; 0
      0000B6 00                     883 	.db #0x00	; 0
      0000B7 00                     884 	.db #0x00	; 0
      0000B8 00                     885 	.db #0x00	; 0
      0000B9 03                     886 	.db #0x03	; 3
      0000BA 00                     887 	.db #0x00	; 0
      0000BB 03                     888 	.db #0x03	; 3
      0000BC 00                     889 	.db #0x00	; 0
      0000BD 03                     890 	.db #0x03	; 3
      0000BE 03                     891 	.db #0x03	; 3
      0000BF 03                     892 	.db #0x03	; 3
      0000C0 03                     893 	.db #0x03	; 3
      0000C1 03                     894 	.db #0x03	; 3
      0000C2 03                     895 	.db #0x03	; 3
      0000C3 00                     896 	.db #0x00	; 0
      0000C4 03                     897 	.db #0x03	; 3
      0000C5 00                     898 	.db #0x00	; 0
      0000C6 03                     899 	.db #0x03	; 3
      0000C7 00                     900 	.db #0x00	; 0
      0000C8 00                     901 	.db #0x00	; 0
      0000C9 03                     902 	.db #0x03	; 3
      0000CA 03                     903 	.db #0x03	; 3
      0000CB 03                     904 	.db #0x03	; 3
      0000CC 03                     905 	.db #0x03	; 3
      0000CD 03                     906 	.db #0x03	; 3
      0000CE 00                     907 	.db #0x00	; 0
      0000CF 03                     908 	.db #0x03	; 3
      0000D0 00                     909 	.db #0x00	; 0
      0000D1 03                     910 	.db #0x03	; 3
      0000D2 00                     911 	.db #0x00	; 0
      0000D3 00                     912 	.db #0x00	; 0
      0000D4 00                     913 	.db #0x00	; 0
      0000D5 00                     914 	.db #0x00	; 0
      0000D6 00                     915 	.db #0x00	; 0
      0000D7 00                     916 	.db #0x00	; 0
      0000D8 03                     917 	.db #0x03	; 3
      0000D9 00                     918 	.db #0x00	; 0
      0000DA 03                     919 	.db #0x03	; 3
      0000DB 00                     920 	.db #0x00	; 0
      0000DC 00                     921 	.db #0x00	; 0
      0000DD 03                     922 	.db #0x03	; 3
      0000DE 00                     923 	.db #0x00	; 0
      0000DF 00                     924 	.db #0x00	; 0
      0000E0 00                     925 	.db #0x00	; 0
      0000E1 00                     926 	.db #0x00	; 0
      0000E2 00                     927 	.db #0x00	; 0
      0000E3 03                     928 	.db #0x03	; 3
      0000E4 00                     929 	.db #0x00	; 0
      0000E5 03                     930 	.db #0x03	; 3
      0000E6 00                     931 	.db #0x00	; 0
      0000E7 03                     932 	.db #0x03	; 3
      0000E8 03                     933 	.db #0x03	; 3
      0000E9 03                     934 	.db #0x03	; 3
      0000EA 03                     935 	.db #0x03	; 3
      0000EB 03                     936 	.db #0x03	; 3
      0000EC 03                     937 	.db #0x03	; 3
      0000ED 00                     938 	.db #0x00	; 0
      0000EE 03                     939 	.db #0x03	; 3
      0000EF 00                     940 	.db #0x00	; 0
      0000F0 00                     941 	.db #0x00	; 0
      0000F1 03                     942 	.db #0x03	; 3
      0000F2 00                     943 	.db #0x00	; 0
      0000F3 03                     944 	.db #0x03	; 3
      0000F4 03                     945 	.db #0x03	; 3
      0000F5 03                     946 	.db #0x03	; 3
      0000F6 03                     947 	.db #0x03	; 3
      0000F7 03                     948 	.db #0x03	; 3
      0000F8 00                     949 	.db #0x00	; 0
      0000F9 03                     950 	.db #0x03	; 3
      0000FA 00                     951 	.db #0x00	; 0
      0000FB 03                     952 	.db #0x03	; 3
      0000FC 00                     953 	.db #0x00	; 0
      0000FD 00                     954 	.db #0x00	; 0
      0000FE 00                     955 	.db #0x00	; 0
      0000FF 00                     956 	.db #0x00	; 0
      000100 00                     957 	.db #0x00	; 0
      000101 00                     958 	.db #0x00	; 0
      000102 03                     959 	.db #0x03	; 3
      000103 00                     960 	.db #0x00	; 0
      000104 00                     961 	.db #0x00	; 0
      000105 03                     962 	.db #0x03	; 3
      000106 00                     963 	.db #0x00	; 0
      000107 01                     964 	.db #0x01	; 1
      000108 00                     965 	.db #0x00	; 0
      000109 00                     966 	.db #0x00	; 0
      00010A 00                     967 	.db #0x00	; 0
      00010B 00                     968 	.db #0x00	; 0
      00010C 00                     969 	.db #0x00	; 0
      00010D 03                     970 	.db #0x03	; 3
      00010E 00                     971 	.db #0x00	; 0
      00010F 03                     972 	.db #0x03	; 3
      000110 00                     973 	.db #0x00	; 0
      000111 03                     974 	.db #0x03	; 3
      000112 03                     975 	.db #0x03	; 3
      000113 03                     976 	.db #0x03	; 3
      000114 03                     977 	.db #0x03	; 3
      000115 03                     978 	.db #0x03	; 3
      000116 03                     979 	.db #0x03	; 3
      000117 00                     980 	.db #0x00	; 0
      000118 00                     981 	.db #0x00	; 0
      000119 03                     982 	.db #0x03	; 3
      00011A 00                     983 	.db #0x00	; 0
      00011B 03                     984 	.db #0x03	; 3
      00011C 00                     985 	.db #0x00	; 0
      00011D 03                     986 	.db #0x03	; 3
      00011E 03                     987 	.db #0x03	; 3
      00011F 03                     988 	.db #0x03	; 3
      000120 03                     989 	.db #0x03	; 3
      000121 03                     990 	.db #0x03	; 3
      000122 00                     991 	.db #0x00	; 0
      000123 03                     992 	.db #0x03	; 3
      000124 00                     993 	.db #0x00	; 0
      000125 03                     994 	.db #0x03	; 3
      000126 03                     995 	.db #0x03	; 3
      000127 03                     996 	.db #0x03	; 3
      000128 03                     997 	.db #0x03	; 3
      000129 00                     998 	.db #0x00	; 0
      00012A 03                     999 	.db #0x03	; 3
      00012B 00                    1000 	.db #0x00	; 0
      00012C 00                    1001 	.db #0x00	; 0
      00012D 03                    1002 	.db #0x03	; 3
      00012E 00                    1003 	.db #0x00	; 0
      00012F 03                    1004 	.db #0x03	; 3
      000130 00                    1005 	.db #0x00	; 0
      000131 00                    1006 	.db #0x00	; 0
      000132 00                    1007 	.db #0x00	; 0
      000133 00                    1008 	.db #0x00	; 0
      000134 00                    1009 	.db #0x00	; 0
      000135 00                    1010 	.db #0x00	; 0
      000136 00                    1011 	.db #0x00	; 0
      000137 03                    1012 	.db #0x03	; 3
      000138 00                    1013 	.db #0x00	; 0
      000139 00                    1014 	.db #0x00	; 0
      00013A 00                    1015 	.db #0x00	; 0
      00013B 00                    1016 	.db #0x00	; 0
      00013C 00                    1017 	.db #0x00	; 0
      00013D 00                    1018 	.db #0x00	; 0
      00013E 03                    1019 	.db #0x03	; 3
      00013F 00                    1020 	.db #0x00	; 0
      000140 00                    1021 	.db #0x00	; 0
      000141 02                    1022 	.db #0x02	; 2
      000142 00                    1023 	.db #0x00	; 0
      000143 03                    1024 	.db #0x03	; 3
      000144 03                    1025 	.db #0x03	; 3
      000145 03                    1026 	.db #0x03	; 3
      000146 03                    1027 	.db #0x03	; 3
      000147 03                    1028 	.db #0x03	; 3
      000148 03                    1029 	.db #0x03	; 3
      000149 03                    1030 	.db #0x03	; 3
      00014A 03                    1031 	.db #0x03	; 3
      00014B 03                    1032 	.db #0x03	; 3
      00014C 03                    1033 	.db #0x03	; 3
      00014D 03                    1034 	.db #0x03	; 3
      00014E 03                    1035 	.db #0x03	; 3
      00014F 03                    1036 	.db #0x03	; 3
      000150 03                    1037 	.db #0x03	; 3
      000151 03                    1038 	.db #0x03	; 3
      000152 03                    1039 	.db #0x03	; 3
      000153 03                    1040 	.db #0x03	; 3
      000154 00                    1041 	.db #0x00	; 0
      000155 00                    1042 	.db #0x00	; 0
      000156 00                    1043 	.db #0x00	; 0
      000157 00                    1044 	.db #0x00	; 0
      000158 00                    1045 	.db #0x00	; 0
      000159 00                    1046 	.db #0x00	; 0
      00015A 00                    1047 	.db #0x00	; 0
      00015B 00                    1048 	.db #0x00	; 0
      00015C 00                    1049 	.db #0x00	; 0
      00015D 00                    1050 	.db #0x00	; 0
      00015E 00                    1051 	.db #0x00	; 0
      00015F 00                    1052 	.db #0x00	; 0
      000160 00                    1053 	.db #0x00	; 0
      000161 00                    1054 	.db #0x00	; 0
      000162 00                    1055 	.db #0x00	; 0
      000163 00                    1056 	.db #0x00	; 0
      000164 00                    1057 	.db #0x00	; 0
      000165 00                    1058 	.db #0x00	; 0
      000166 00                    1059 	.db #0x00	; 0
      000167 00                    1060 	.db #0x00	; 0
      000168                       1061 __xinit__BackgropundTiles:
      000168 3C                    1062 	.db #0x3c	; 60
      000169 3C                    1063 	.db #0x3c	; 60
      00016A 42                    1064 	.db #0x42	; 66	'B'
      00016B 7E                    1065 	.db #0x7e	; 126
      00016C 81                    1066 	.db #0x81	; 129
      00016D FF                    1067 	.db #0xff	; 255
      00016E 81                    1068 	.db #0x81	; 129
      00016F FF                    1069 	.db #0xff	; 255
      000170 81                    1070 	.db #0x81	; 129
      000171 FF                    1071 	.db #0xff	; 255
      000172 81                    1072 	.db #0x81	; 129
      000173 FF                    1073 	.db #0xff	; 255
      000174 42                    1074 	.db #0x42	; 66	'B'
      000175 7E                    1075 	.db #0x7e	; 126
      000176 3C                    1076 	.db #0x3c	; 60
      000177 3C                    1077 	.db #0x3c	; 60
      000178 3C                    1078 	.db #0x3c	; 60
      000179 3C                    1079 	.db #0x3c	; 60
      00017A 42                    1080 	.db #0x42	; 66	'B'
      00017B 7E                    1081 	.db #0x7e	; 126
      00017C 81                    1082 	.db #0x81	; 129
      00017D FF                    1083 	.db #0xff	; 255
      00017E 81                    1084 	.db #0x81	; 129
      00017F FF                    1085 	.db #0xff	; 255
      000180 81                    1086 	.db #0x81	; 129
      000181 FF                    1087 	.db #0xff	; 255
      000182 81                    1088 	.db #0x81	; 129
      000183 FF                    1089 	.db #0xff	; 255
      000184 81                    1090 	.db #0x81	; 129
      000185 FF                    1091 	.db #0xff	; 255
      000186 81                    1092 	.db #0x81	; 129
      000187 FF                    1093 	.db #0xff	; 255
      000188 00                    1094 	.db #0x00	; 0
      000189 18                    1095 	.db #0x18	; 24
      00018A 00                    1096 	.db #0x00	; 0
      00018B 24                    1097 	.db #0x24	; 36
      00018C 00                    1098 	.db #0x00	; 0
      00018D 42                    1099 	.db #0x42	; 66	'B'
      00018E 00                    1100 	.db #0x00	; 0
      00018F 42                    1101 	.db #0x42	; 66	'B'
      000190 00                    1102 	.db #0x00	; 0
      000191 24                    1103 	.db #0x24	; 36
      000192 00                    1104 	.db #0x00	; 0
      000193 18                    1105 	.db #0x18	; 24
      000194 00                    1106 	.db #0x00	; 0
      000195 08                    1107 	.db #0x08	; 8
      000196 00                    1108 	.db #0x00	; 0
      000197 38                    1109 	.db #0x38	; 56	'8'
      000198 00                    1110 	.db #0x00	; 0
      000199 00                    1111 	.db #0x00	; 0
      00019A 00                    1112 	.db #0x00	; 0
      00019B 00                    1113 	.db #0x00	; 0
      00019C 00                    1114 	.db #0x00	; 0
      00019D 00                    1115 	.db #0x00	; 0
      00019E 00                    1116 	.db #0x00	; 0
      00019F 00                    1117 	.db #0x00	; 0
      0001A0 00                    1118 	.db #0x00	; 0
      0001A1 00                    1119 	.db #0x00	; 0
      0001A2 00                    1120 	.db #0x00	; 0
      0001A3 00                    1121 	.db #0x00	; 0
      0001A4 00                    1122 	.db #0x00	; 0
      0001A5 00                    1123 	.db #0x00	; 0
      0001A6 00                    1124 	.db #0x00	; 0
      0001A7 00                    1125 	.db #0x00	; 0
      0001A8                       1126 __xinit__PlacyHolder:
      0001A8 3C                    1127 	.db #0x3c	; 60
      0001A9 3C                    1128 	.db #0x3c	; 60
      0001AA 42                    1129 	.db #0x42	; 66	'B'
      0001AB 7E                    1130 	.db #0x7e	; 126
      0001AC A5                    1131 	.db #0xa5	; 165
      0001AD FF                    1132 	.db #0xff	; 255
      0001AE 81                    1133 	.db #0x81	; 129
      0001AF FF                    1134 	.db #0xff	; 255
      0001B0 BD                    1135 	.db #0xbd	; 189
      0001B1 FF                    1136 	.db #0xff	; 255
      0001B2 81                    1137 	.db #0x81	; 129
      0001B3 FF                    1138 	.db #0xff	; 255
      0001B4 42                    1139 	.db #0x42	; 66	'B'
      0001B5 7E                    1140 	.db #0x7e	; 126
      0001B6 3C                    1141 	.db #0x3c	; 60
      0001B7 3C                    1142 	.db #0x3c	; 60
                                   1143 	.area _CABS (ABS)
