                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.2 #13511 (MINGW32)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -msm83
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _printf
                                     13 ;--------------------------------------------------------
                                     14 ; special function registers
                                     15 ;--------------------------------------------------------
                                     16 ;--------------------------------------------------------
                                     17 ; ram data
                                     18 ;--------------------------------------------------------
                                     19 	.area _DATA
                                     20 ;--------------------------------------------------------
                                     21 ; ram data
                                     22 ;--------------------------------------------------------
                                     23 	.area _INITIALIZED
                                     24 ;--------------------------------------------------------
                                     25 ; absolute external ram data
                                     26 ;--------------------------------------------------------
                                     27 	.area _DABS (ABS)
                                     28 ;--------------------------------------------------------
                                     29 ; global & static initialisations
                                     30 ;--------------------------------------------------------
                                     31 	.area _HOME
                                     32 	.area _GSINIT
                                     33 	.area _GSFINAL
                                     34 	.area _GSINIT
                                     35 ;--------------------------------------------------------
                                     36 ; Home
                                     37 ;--------------------------------------------------------
                                     38 	.area _HOME
                                     39 	.area _HOME
                                     40 ;--------------------------------------------------------
                                     41 ; code
                                     42 ;--------------------------------------------------------
                                     43 	.area _CODE
                                     44 ;main.c:8: void main() {
                                     45 ;	---------------------------------
                                     46 ; Function main
                                     47 ; ---------------------------------
      000000                         48 _main::
                                     49 ;main.c:9: ENABLE_RAM;
      000000 21 00 00                50 	ld	hl, #0x0000
      000003 36 0A                   51 	ld	(hl), #0x0a
                                     52 ;main.c:11: if (save_blob.magic != SAVE_MAGIC_VALUE) {
      000005 21r00r00                53 	ld	hl, #_save_blob
      000008 2A                      54 	ld	a, (hl+)
      000009 4F                      55 	ld	c, a
      00000A 2A                      56 	ld	a, (hl+)
      00000B 23                      57 	inc	hl
      00000C 47                      58 	ld	b, a
      00000D 3A                      59 	ld	a, (hl-)
      00000E 6E                      60 	ld	l, (hl)
                                     61 ;	spillPairReg hl
      00000F 67                      62 	ld	h, a
                                     63 ;	spillPairReg hl
                                     64 ;	spillPairReg hl
      000010 79                      65 	ld	a, c
      000011 D6 53                   66 	sub	a, #0x53
      000013 20 0F                   67 	jr	NZ, 00110$
      000015 78                      68 	ld	a, b
      000016 D6 41                   69 	sub	a, #0x41
      000018 20 0A                   70 	jr	NZ, 00110$
      00001A 7D                      71 	ld	a, l
      00001B D6 56                   72 	sub	a, #0x56
      00001D 20 05                   73 	jr	NZ, 00110$
      00001F 7C                      74 	ld	a, h
      000020 D6 45                   75 	sub	a, #0x45
      000022 28 13                   76 	jr	Z, 00102$
      000024                         77 00110$:
                                     78 ;main.c:12: save_blob.magic = SAVE_MAGIC_VALUE;
      000024 21r00r00                79 	ld	hl, #_save_blob
      000027 3E 53                   80 	ld	a, #0x53
      000029 22                      81 	ld	(hl+), a
      00002A 3E 41                   82 	ld	a, #0x41
      00002C 22                      83 	ld	(hl+), a
      00002D 3E 56                   84 	ld	a, #0x56
      00002F 22                      85 	ld	(hl+), a
      000030 36 45                   86 	ld	(hl), #0x45
                                     87 ;main.c:13: save_blob.value = 0;
      000032 21r04r00                88 	ld	hl, #(_save_blob + 4)
      000035 36 00                   89 	ld	(hl), #0x00
      000037                         90 00102$:
                                     91 ;main.c:16: save_blob.value++;
      000037 01r04r00                92 	ld	bc, #_save_blob+4
      00003A 0A                      93 	ld	a, (bc)
      00003B 3C                      94 	inc	a
      00003C 02                      95 	ld	(bc), a
                                     96 ;main.c:18: printf("each reboot will\nincrement value\nby 1\n\nsaved value %hu", save_blob.value);
      00003D 4F                      97 	ld	c, a
      00003E 06 00                   98 	ld	b, #0x00
      000040 C5                      99 	push	bc
      000041 11r4Br00               100 	ld	de, #___str_0
      000044 D5                     101 	push	de
      000045 CDr00r00               102 	call	_printf
      000048 E8 04                  103 	add	sp, #4
                                    104 ;main.c:19: }
      00004A C9                     105 	ret
      00004B                        106 ___str_0:
      00004B 65 61 63 68 20 72 65   107 	.ascii "each reboot will"
             62 6F 6F 74 20 77 69
             6C 6C
      00005B 0A                     108 	.db 0x0a
      00005C 69 6E 63 72 65 6D 65   109 	.ascii "increment value"
             6E 74 20 76 61 6C 75
             65
      00006B 0A                     110 	.db 0x0a
      00006C 62 79 20 31            111 	.ascii "by 1"
      000070 0A                     112 	.db 0x0a
      000071 0A                     113 	.db 0x0a
      000072 73 61 76 65 64 20 76   114 	.ascii "saved value %hu"
             61 6C 75 65 20 25 68
             75
      000081 00                     115 	.db 0x00
                                    116 	.area _CODE
                                    117 	.area _INITIALIZER
                                    118 	.area _CABS (ABS)
